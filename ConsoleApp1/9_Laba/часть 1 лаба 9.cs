// Все примеры были разобраны и запущены 
/*  
    Недостатком большинства хеш-функций является то, что они не гарантируют получение уникального адреса, 
поскольку количество возможных значений поля хеширования может быть гораздо больше количества адресов, 
доступных для записи. Каждый вычисленный хеш-функцией адрес соответствует некоторой странице, 
или сегменту (bucket), с несколькими ячейками (слотами), предназначенными для нескольких записей. 
В пределах одного сегмента записи размещаются в слотах в порядке поступления. 
Тот случай, когда один и тот же адрес генерируется для двух или более записей, называется конфликтом (collision), 
a подобные записи — синонимами. В этой ситуации новую запись необходимо вставить в другую позицию, 
поскольку место с вычисленным для нее хеш-адресом уже занято. 
Разрешение конфликтов усложняет сопровождение хешированных файлов и снижает общую производительность их работы.
Тот факт, что с помощью эффективного алгоритма невозможно провести операцию,
 обратную хэшированию, и восстановить исходные данные, не означает, что вас не могут взломать. 
Если хорошо поискать, то можно найти базы данных с хэшами распространённых слов и коротких фраз. 
Кроме того, простые пароли можно быстро и легко брутфорсить или взламывать перебором по словарю.
плюсы
обращение к данным по значению ключа происходит за одну операцию ввода / вывода;
не нужно создавать никаких дополнительных структур (типа индекса) и тратить память на их хранение.
*/
using System;
using System.Text;
using System.Security.Cryptography;
namespace Shifr
{
    class Program
    {
        static string GetMd5Hash(string input)
        {
            MD5 md5Hasher = MD5.Create();
            byte[] data = md5Hasher.ComputeHash(Encoding.Default.GetBytes(input));
            StringBuilder sBuilder = new StringBuilder();
            for (int i = 0; i < data.Length; i++)
{

                sBuilder.Append(data[i].ToString(" x2 "));

            }
            return sBuilder.ToString();
        }
        static void Main(string[] args)
        {
            string pasHash = GetMd5Hash(" HashHashHashHashHash "); // Hash
            Console.WriteLine(pasHash);
            Console.ReadKey();
        }
    } 
}
